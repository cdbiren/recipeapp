{"version":3,"sources":["Components/Recipe.js","App.js","reportWebVitals.js","index.js","Components/main.module.css"],"names":["Recipe","title","calories","image","ingredients","className","main","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","result","setResult","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onChange","e","target","value","type","onClick","preventDefault","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAuBeA,EApBA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACE,mCACE,sBAAKC,UAAWC,IAAKC,OAArB,UACE,6BAAKN,IACL,6BACWG,EAAYI,KAAI,SAACC,GACd,OACI,6BAAKA,EAAWC,YAKlC,4BAAIR,IACJ,qBAAKS,IAAKR,EAAOS,IAAKX,UCyCjBY,MArDf,WACE,IADa,EAIiBC,mBAAS,IAJ1B,mBAINC,EAJM,KAIGC,EAJH,OAKeF,mBAAS,IALxB,mBAKNG,EALM,KAKEC,EALF,OAMaJ,mBAAS,WANtB,mBAMNK,EANM,KAMCC,EAND,KASbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAbf,WAae,oBAZd,mCAYc,sDADX,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,GANK,2CAAH,qDAqBhB,OACE,mCACE,sBAAKtB,UAAU,MAAf,UACE,uBAAMA,UAAU,aAAhB,UACE,uBAAO0B,SAhBE,SAACC,GAChBd,EAAUc,EAAEC,OAAOC,QAecC,KAAK,OAAOD,MAAOjB,IAC9C,wBAAQkB,KAAK,SAASC,QAbb,SAACJ,GAChBA,EAAEK,iBACFjB,EAASH,GACTC,EAAU,KAUJ,uBAEV,qBAAKb,UAAU,UAAf,SACSU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAO+B,MAAOpC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MAAOC,YAAaG,EAAOA,OAAOH,aAA1IG,EAAOA,OAAO+B,kBCpCtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,wB","file":"static/js/main.5b4d9f27.chunk.js","sourcesContent":["import React from 'react';\r\nimport main from './main.module.css';\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return (\r\n      <>\r\n        <div className={main.recipe}>\r\n          <h1>{title}</h1>\r\n          <ol>\r\n                    {ingredients.map((ingredient) => {\r\n                        return (\r\n                            <li>{ingredient.text}</li>\r\n                )\r\n            })}\r\n            \r\n          </ol>\r\n          <p>{calories}</p>\r\n          <img src={image} alt={title} />\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Recipe from \"./Components/Recipe\";\n\nfunction App() {\n  const APP_ID = \"a2ba34c1\";\n  const APP_KEY = \"41043c5149a4e795f1c029cbd20995f0\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [result, setResult] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data);\n    \n  };\n  const getValue = (e) => {\n    setResult(e.target.value);\n    \n  }\n  const useValue = (e) => {\n    e.preventDefault();\n    setQuery(result);\n    setResult('');\n   \n  }\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <form className=\"input-form\">\n          <input onChange={getValue} type=\"text\" value={result}/>\n          <button type=\"submit\" onClick={useValue}>Search</button>\n        </form>\n<div className=\"content\">\n        {recipes.map(recipe => (\n          <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\n        ))}\n        </div>\n      </div>\n      \n        \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"main_recipe__ZJeUq\"};"],"sourceRoot":""}